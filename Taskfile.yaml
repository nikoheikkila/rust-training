version: "3"

vars:
  SOURCES: src/*.rs
  PACKAGE: '{{ default "hello_world" .PACKAGE }}'

tasks:

  default:
    run: always
    cmds:
      - |
        {{range $project := .PROJECTS | splitLines -}}
        PACKAGE={{$project}} task format test
        {{end}}
    vars:
      PROJECTS:
        sh: fd --type directory --maxdepth 1 | sed 's/\///g'

  clean:
    desc: Clean up the build directory of artifacts
    dir: "{{.PACKAGE}}"
    cmds:
      - cargo clean {{.CLI_ARGS}}

  build:
    desc: Compile the Rust source code to executable
    dir: "{{.PACKAGE}}"
    sources:
      - "{{.SOURCES}}"
    generates:
      - target/debug/{{.PACKAGE}}
    cmds:
      - cargo build {{.CLI_ARGS}}

  dev:
    desc: Run the executable straight from source
    dir: "{{.PACKAGE}}"
    cmds:
      - cargo run {{.CLI_ARGS}}

  start:
    desc: Run the built executable
    dir: "{{.PACKAGE}}"
    deps:
      - task: build
    cmds:
      - ./target/debug/{{.PACKAGE}} {{.CLI_ARGS}}

  lint:
    desc: Lint the Rust source code
    dir: "{{.PACKAGE}}"
    sources:
      - "{{.SOURCES}}"
    cmds:
      - cargo clippy {{.CLI_ARGS}}

  format:
    desc: Format the Rust source code
    dir: "{{.PACKAGE}}"
    sources:
      - "{{.SOURCES}}"
    cmds:
      - cargo clippy --fix --allow-dirty
      - cargo fmt

  test:
    desc: Test the application
    deps:
      - lint
      - build
    dir: "{{.PACKAGE}}"
    sources:
      - "{{.SOURCES}}"
    cmds:
      - cargo test --verbose {{.CLI_ARGS}}
